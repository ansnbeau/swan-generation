root ::= op_decl
op_decl ::= inline_opt OPKIND_WS identifier "(" param_typed_list_opt ")" RETURNS_WS "(" param_typed_list_opt ")" body
inline_opt ::= | "inline "
OPKIND_WS ::= "function " | "node "
RETURNS_WS ::= " returns "

param_typed_list_opt ::= | param_typed_list
param_typed_list ::= param_typed (", " param_typed)*
param_typed ::= identifier TYPE_ANN
TYPE_ANN ::= " : " type_expr

body ::= ";" | equation_block
equation_block ::= equation+
equation ::= identifier " = " expression ";"

expression ::= primary | primary ARITHOP expression | "(" expression ")"
ARITHOP ::= " + " | " - " | " * " | " / " | " mod "
primary ::= identifier | number

# types (simple + sized forms; no left recursion)
type_expr ::= base_type | "signed" "<<" expression ">>" | "unsigned" "<<" expression ">>"
base_type ::= "bool" | "int8" | "int16" | "int32" | "int64" | "uint8" | "uint16" | "uint32" | "uint64" | "float32" | "float64" | "char"

identifier ::= [a-zA-Z_][a-zA-Z0-9_]*
number ::= [0-9]+
